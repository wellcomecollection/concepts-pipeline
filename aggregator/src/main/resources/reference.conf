data-source.works.snapshot="https://data.wellcomecollection.org/catalogue/v2/works.json.gz"
data-source.workURL.template="https://api.wellcomecollection.org/catalogue/v2/works/%s?include=identifiers,subjects,contributors,genres"
// At time of writing, the largest JSON in the catalogue is ca 475KiB
// 0.5 MiB should give sufficient overhead to allow for expansion in the
// longest catalogue entries.
// When running over the whole catalogue like this, it will be essentially under
// human control, so the number can be tweaked if required, rather than causing a
// failure in an unsupervised system.
data-source.maxframe.kib=512
// Running locally (not perfectly scientific), against a prepopulated
// elasticsearch index in Docker, (time cat ~/Downloads/works.json| docker
// compose run -T aggregator) peak speed seemed to be at 50K documents
// (3m30s). indexing in 25K and 100K batches both took about 3m45s
data-target.bulk.max-records=50000

data-target.cluster = {
   host=localhost
   port=9200
   scheme=http
   resolveSecrets = false
}
data-target.index.name=concepts-used
